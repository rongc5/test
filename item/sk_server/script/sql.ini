##多条数据去重, 取最新的一条记录

SELECT max(id) id from quotation_t where trade_date = CURRENT_DATE GROUP BY sk_id


##查询当天涨幅大于6的最新记录

SELECT b.sk_id, b.id, b.range_percent from
(SELECT max(id) id from quotation_t where trade_date = CURRENT_DATE GROUP BY sk_id) a
JOIN
(SELECT sk_id, id, range_percent from quotation_t where trade_date = CURRENT_DATE() and range_percent >= 6 GROUP BY sk_id, id)
    b on  a.id = b.id


## 查询上一个交易日的日期

SELECT a.trade_date FROM 
(SELECT trade_date from quotation_t GROUP BY trade_date ORDER BY trade_date desc limit 2) a ORDER BY trade_date asc LIMIT 1


###查询当天资金大单同向的股

SELECT a.sk_id, c.sk_name, d.range_percent, e.down_pointer, e.end_end_5, e.end_end_10, e.end_end_20, a.force_diff, a.force_dratio, b.single_diff, b.single_ratio, b.single_index from 
(
    SELECT b.sk_id, b.force_diff, b.force_dratio from 
        (SELECT max(id) id from main_funds_t where trade_date = CURRENT_DATE GROUP BY sk_id) a
            JOIN    
                (SELECT id, sk_id, force_diff, force_dratio from main_funds_t where trade_date= CURRENT_DATE() and  force_diff >= 500) b
                    on a.id = b.id
                    )
a
JOIN
(
 SELECT b.sk_id, b.single_diff, b.single_ratio, b.single_index from
 (SELECT max(id) id from single_t where trade_date = CURRENT_DATE GROUP BY sk_id, single_index) a
 JOIN
 (SELECT id, sk_id, single_diff, single_ratio, single_index from single_t where trade_date=CURRENT_DATE() and single_ratio > 0.45)
 b on a.id = b.id
 )b
on a.sk_id = b.sk_id 
JOIN
(SELECT sk_id, sk_name FROM code_all) c
on a.sk_id = c.sk_id
JOIN
(
    SELECT b.sk_id, b.id, b.range_percent from
    (SELECT max(id) id from quotation_t where trade_date = CURRENT_DATE GROUP BY sk_id) a
    JOIN
    (SELECT sk_id, id, range_percent from quotation_t where trade_date = CURRENT_DATE() and  range_percent < 5 GROUP BY sk_id, range_percent, id)
    b on  a.id = b.id
    ) d on a.sk_id = d.sk_id
JOIN
(
        SELECT b.sk_id, b.id, b.down_pointer, b.end_end_5, b.end_end_10, b.end_end_20 from
        (SELECT max(id) id from technical_t where trade_date = CURRENT_DATE GROUP BY sk_id) a
        JOIN
        (SELECT id, sk_id, down_pointer, end_end_5, end_end_10, end_end_20 from technical_t where trade_date  = CURRENT_DATE()) b 
        on a.id = b.id WHERE b.down_pointer >=0.8
        ) e
on  a.sk_id = e.sk_id



##20 日内有过涨幅大于9.9
SELECT a.sk_id, c.sk_name, d.range_percent, a.force_diff, a.force_dratio, b.single_diff, b.single_ratio, b.single_index from 
(
    SELECT b.sk_id, b.force_diff, b.force_dratio from 
        (SELECT max(id) id from main_funds_t where trade_date = CURRENT_DATE GROUP BY sk_id) a
            JOIN    
                (SELECT id, sk_id, force_diff, force_dratio from main_funds_t where trade_date= CURRENT_DATE() and  force_diff >= 500) b
                    on a.id = b.id
                    )
a
JOIN
(
 SELECT b.sk_id, b.single_diff, b.single_ratio, b.single_index from
 (SELECT max(id) id from single_t where trade_date = CURRENT_DATE GROUP BY sk_id) a
 JOIN
 (SELECT id, sk_id, single_diff, single_ratio, single_index from single_t where trade_date=CURRENT_DATE() and single_ratio > 0.45)
 b on a.id = b.id
 )b
on a.sk_id = b.sk_id 
JOIN
(SELECT sk_id, sk_name FROM code_all) c
on a.sk_id = c.sk_id
JOIN
(
    SELECT b.sk_id, b.id, b.range_percent from
    (SELECT max(id) id from quotation_t where trade_date = CURRENT_DATE GROUP BY sk_id) a
    JOIN
    (SELECT sk_id, id, range_percent from quotation_t where trade_date = CURRENT_DATE() and  range_percent < 5 GROUP BY sk_id, range_percent, id)
    b on  a.id = b.id
    ) d on a.sk_id = d.sk_id
JOIN
(SELECT sk_id from quotation_t where trade_date >= '2021-02-23'  and trade_date <= '2021-03-19' and  range_percent >= 9.9 GROUP BY sk_id) e
on  a.sk_id = e.sk_id



### 获取最近20 天资金数据
SELECT b.trade_date, b.sk_id, b.force_diff, b.force_dratio from 
(SELECT max(id) id from main_funds_t where trade_date >='2021-02-23' and trade_date < CURRENT_DATE GROUP BY trade_date, sk_id) a
JOIN    
(SELECT id, trade_date, sk_id, force_diff, force_dratio from main_funds_t where trade_date >='2021-02-23' and trade_date < CURRENT_DATE) b
on a.id = b.id where b.sk_id ='sh601021' ORDER BY trade_date desc

##查看大单数据

SELECT b.trade_date, b.sk_id, b.single_diff, b.single_ratio, b.single_index from 
    (SELECT max(id) id from single_t where trade_date >='2021-02-23' and trade_date < CURRENT_DATE GROUP BY trade_date, sk_id, single_index) a
        JOIN    
            (SELECT id, sk_id, trade_date, single_diff, single_ratio, single_index from single_t where trade_date >='2021-02-23' and trade_date < CURRENT_DATE) b
                on a.id = b.id where b.sk_id ='sh601021' ORDER BY trade_date desc, single_index desc



##rps 计算

            SELECT a.sk_id, c.sk_name, a.end, round(a.end/b.end, 2) as ends, a.range_percent from 
            (SELECT b.sk_id, b.id, b.end, b.range_percent from
             (SELECT max(id) id from quotation_t where trade_date = CURRENT_DATE GROUP BY sk_id) a
             JOIN
             (SELECT sk_id, id, end, range_percent from quotation_t where trade_date = CURRENT_DATE()  GROUP BY sk_id, end, range_percent, id)
             b on  a.id = b.id
            ) a 
            JOIN
            (
                SELECT b.sk_id, b.id, b.end from
                (SELECT max(id) id from quotation_t where trade_date = '2020-12-25' GROUP BY sk_id) a
                JOIN
                (SELECT sk_id, id, end from quotation_t where trade_date = '2020-12-25'  GROUP BY sk_id, end, id)
                b on  a.id = b.id
            ) b on a.sk_id = b.sk_id
            JOIN
            (SELECT sk_id, sk_name FROM code_all where sk_name not like '%ST%') c
            on a.sk_id = c.sk_id  ORDER BY ends desc limit 400

##
        create procedure get_max_main_funds(IN num INT, IN max_funds INT)
    BEGIN
        create temporary table if not exists max_main_funds
            (
                    sk_id varchar(8) NOT NULL,
                            force_diff bigint(32) NOT NULL,
                                    trade_date date NOT NULL,
                                            update_time datetime DEFAULT NULL,
                                                    PRIMARY KEY (sk_id, force_diff, trade_date)
                                                        );
        truncate table max_main_funds;
            declare i int unsigned default 0
                while num > 0 DO
                        set @start_date=‘’;
                                call get_trade_date(num, @start_date);
                                        select @start_date as start_date;
                                                
                                                select  start_date , sk_id, sum(force_diff) as sum_diff from main_funds_t where trade_date >= start_date group by sk_id having sum(force_diff) >= max_funds;

                                                        SET num = num - 1
                                                                SELECT num
                                                                    END WHILE;

                                                                    END
